#!/bin/bash

#-----------
# VARIABLES
#-----------

NAME=${NAME-samplephp}
URL=${URL-https://github.com/capbash/samplephp}

INSTALL_DIR=${INSTALL_DIR-/var/local/apps}
USER_EMAIL=${USER_EMAIL-server@localhost}
USER_NAME=${USER_NAME-server}
GIT_REMOTE=${GIT_REMOTE-origin}
GIT_CHECKOUT_MODE=`if [ -z "$TAG" ]; then echo "branch"; else echo "tag"; fi`
BRANCH=${BRANCH-master}
TAG=${TAG-$BRANCH}

#-----------
# Install Script
#-----------

REPO_DIR=${INSTALL_DIR}/${NAME}

if [[ "`which git 2> /dev/null`" == "" ]]; then
  echo "Installing git"
  apt-get install -y git-core
fi

if [[ "`git config --global user.email`" == "" ]]; then
  echo "Configuraitng default user $USER_EMAIL ($USER_NAME)"
  git config --global user.email "$USER_EMAIL"
  git config --global user.name "$USER_NAME"
fi

if [[ ! -e $INSTALL_DIR ]]; then
  echo "Creating $INSTALL_DIR"
  mkdir $INSTALL_DIR
fi

if [[ ! -e ${REPO_DIR} ]]; then
  echo "Creating a new REPO ${REPO_DIR} (${BRANCH})..."
  (cd ${INSTALL_DIR} && git clone ${URL} ${NAME})
  [ $? -ne 0 ] && exit 1

  (cd ${INSTALL_DIR}/${NAME} && git checkout ${TAG})
  [ $? -ne 0 ] && exit 1
else

  if [[ "$GIT_CHECKOUT_MODE" = "tag" ]]; then
    echo "Forcing a checkout to ${REPO_DIR} (${BRANCH}, tag $TAG)"
    (cd ${REPO_DIR} && \
     git reset --hard HEAD && \
     git fetch && \
     git checkout $BRANCH && \
     git merge origin $BRANCH && \
     git checkout tags/$TAG 2>&1)
  else
    echo "Forcing a reset to ${REPO_DIR} (${BRANCH})"
    (cd ${REPO_DIR} && \
     git fetch && \
     git checkout ${BRANCH} && \
     git fetch && \
     git reset --hard ${GIT_REMOTE}/${BRANCH} && \
     git checkout ${TAG})
  fi

fi
